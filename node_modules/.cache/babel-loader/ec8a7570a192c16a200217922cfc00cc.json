{"ast":null,"code":"var _jsxFileName = \"/Users/mporzier/Desktop/Matcha/matcha/src/Snake.js\";\nimport React, { Component } from \"react\";\nimport \"./SnakeElements.css\";\nimport Food from \"./Food\";\nimport SnakeBody from \"./SnakeBody\";\n\nconst getRandomCoordinates = () => {\n  let x = Math.floor(Math.random() * 40);\n  let y = Math.floor(Math.random() * 40);\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  direction: \"RIGHT\",\n  snakeDots: [[0, 0], [0, 2]]\n};\n\nconst onKeyDown = e => {\n  e = e || window.event;\n\n  if (e.key === 38) {\n    this.setState({\n      direction: \"UP\"\n    });\n  }\n\n  if (e.key === 40) {\n    this.setState({\n      direction: \"DOWN\"\n    });\n  }\n\n  if (e.key === 37) {\n    this.setState({\n      direction: \"LEFT\"\n    });\n  }\n\n  if (e.key === 39) {\n    this.setState({\n      direction: \"RIGHT\"\n    });\n  }\n\n  console.log(\"coucou\");\n};\n\ndocument.addEventListener(\"keydown\", onKeyDown(event));\n\nclass Snake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      if (this.state.direction === \"RIGHT\") {\n        head = [head[0] + 2, head[1]];\n      }\n\n      if (this.state.direction === \"LEFT\") {\n        head = [head[0] - 2, head[1]];\n      }\n\n      if (this.state.direction === \"DOWN\") {\n        head = [head[0], head[1] + 2];\n      }\n\n      if (this.state.direction === \"UP\") {\n        head = [head[0], head[1] - 2];\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        this.onGameOver();\n      }\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n\n  onGameOver() {\n    //   alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    this.setState(initialState);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gameCanvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(SnakeBody, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Snake;","map":{"version":3,"sources":["/Users/mporzier/Desktop/Matcha/matcha/src/Snake.js"],"names":["React","Component","Food","SnakeBody","getRandomCoordinates","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","onKeyDown","e","window","event","key","setState","console","log","document","addEventListener","Snake","state","moveSnake","dots","head","length","push","shift","componentDidMount","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","componentDidUpdate","onGameOver","snake","pop","forEach","dot","enlargeSnake","increaseSpeed","newSnake","unshift","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SnakeElements.css\";\nimport Food from \"./Food\";\nimport SnakeBody from \"./SnakeBody\";\n\nconst getRandomCoordinates = () => {\n  let x = Math.floor(Math.random() * 40);\n  let y = Math.floor(Math.random() * 40);\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  direction: \"RIGHT\",\n  snakeDots: [\n    [0, 0],\n    [0, 2]\n  ]\n};\n\nconst onKeyDown = e => {\n  e = e || window.event;\n  if (e.key === 38) {\n    this.setState({ direction: \"UP\" });\n  }\n  if (e.key === 40) {\n    this.setState({ direction: \"DOWN\" });\n  }\n  if (e.key === 37) {\n    this.setState({ direction: \"LEFT\" });\n  }\n  if (e.key === 39) {\n    this.setState({ direction: \"RIGHT\" });\n  }\n  console.log(\"coucou\");\n};\n\ndocument.addEventListener(\"keydown\", onKeyDown(event));\n\nclass Snake extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    if (this.state.direction === \"RIGHT\") {\n      head = [head[0] + 2, head[1]];\n    }\n    if (this.state.direction === \"LEFT\") {\n      head = [head[0] - 2, head[1]];\n    }\n    if (this.state.direction === \"DOWN\") {\n      head = [head[0], head[1] + 2];\n    }\n    if (this.state.direction === \"UP\") {\n      head = [head[0], head[1] - 2];\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots\n    });\n  };\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        this.onGameOver();\n      }\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      });\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n\n  onGameOver() {\n    //   alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    this.setState(initialState);\n  }\n\n  render() {\n    return (\n      <div className=\"gameCanvas\">\n        <SnakeBody snakeDots={this.state.snakeDots} />\n        <Food dot={this.state.food} />\n      </div>\n    );\n  }\n}\n\nexport default Snake;\n"]},"metadata":{},"sourceType":"module"}